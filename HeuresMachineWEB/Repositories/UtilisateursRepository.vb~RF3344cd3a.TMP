Imports System.Data.SqlClient
Imports HeuresMachineWEB.Entities

Namespace Repositories

    Public Class UtilisateursRepository
        Inherits ARepository(Of Personne)

        Public Const TABLE_NAME As String = "DBO.PERSONNE"
        Public Const FIELD_CWID As String = TABLE_NAME & "." & "CWID"
        Public Const FIELD_NAME As String = TABLE_NAME & "." & "NOM"
        Public Const FIELD_ACCES As String = TABLE_NAME & "." & "ACCES"

        '  Public Const ASSOCIATION_NAME As String = "DBO.INTERVENANTS"
        '  Public Const FIELD_OFFER As String = ASSOCIATION_NAME & "." & "OFFRE"
        ' Public Const FIELD_USER As String = ASSOCIATION_NAME & "." & "UTILISATEUR"
        ' Public Const FIELD_QUALITY As String = ASSOCIATION_NAME & "." & "QUALITE"

        Public Overrides Function Mapping(reader As SqlDataReader) As Personne
            Dim user As New Personne()
            user.Id = CType(reader.Item(TABLE_NAME & "." & FIELD_ID), Long)
            user.Cwid = CType(reader.Item(FIELD_CWID), String)
            user.Nom = CType(reader.Item(FIELD_NAME), String)
            user.Acces = CType(reader.Item(FIELD_ACCES), String)
            Return user
        End Function

        Public Overrides Function FieldList() As List(Of String)
            Dim fields As List(Of String) = MyBase.FieldList()
            fields.Add(FIELD_CWID)
            fields.Add(FIELD_NAME)
            fields.Add(FIELD_ACCES)
            Return fields
        End Function

        Protected Overrides Function TableName() As String
            Return TABLE_NAME
        End Function

        Protected Overrides Function FieldList(user As Personne) As Dictionary(Of String, Object)
            Dim fields As Dictionary(Of String, Object) = MyBase.FieldList(user)
            fields.Add(FIELD_CWID, user.Cwid)
            fields.Add(FIELD_NAME, user.Nom)
            Return fields
        End Function

        ' ----------------------------------------------------------------------------------------------------
        ' Relation avec Offre
        ' ----------------------------------------------------------------------------------------------------

        '        Private Class ContributorQuery
        '            Inherits AQuery(Of Personne)

        '            Public Data As List(Of Intervenant)

        '            Public Sub New(repository As ARepository(Of Personne), request As String)
        '                MyBase.New(repository, request)
        '                Data = New List(Of Intervenant)
        '            End Sub

        '            Public Overrides Sub ProcessResults(result As SqlDataReader)
        '                While (result.Read())
        '                    Dim contributor As New Intervenant(Repository.Mapping(result))
        '                    contributor.Qualite = CType(result.Item(FIELD_QUALITY), Intervenant.Quality)
        '                    Data.Add(contributor)
        '                End While
        '            End Sub
        '        End Class

        '        '    Private Function ContributorFieldList() As List(Of String)
        '        '    Dim fields As New List(Of String)
        '        '    fields.Add(FIELD_QUALITY)
        '        '    Return fields
        '        'End Function

        '        'Public Sub FillContributors(affaire As Previsionnel)
        '        '    Dim sql As String = "SELECT " & FormatFieldList(FieldList(), True) & "," & FormatFieldList(ContributorFieldList(), True) &
        '        '    " FROM " & ASSOCIATION_NAME &
        '        '    " JOIN " & TABLE_NAME & " ON " & FIELD_USER & " = " & TABLE_NAME & "." & FIELD_ID &
        '        '    " WHERE " & FIELD_OFFER & " = " & offer.Id
        '        '    Dim query As New ContributorQuery(Me, sql)
        '        '    Database.GetInstance().ExecuteQuery(query)

        '        'For Each user As Intervenant In query.Data
        '        '    offer.Intervenants.Add(user)
        '        'Next
        '        ' End Sub

        '        'Public Sub AssociateUsers(offer As Offre)
        '        'Database.GetInstance().ExecuteNonQuery("DELETE FROM " & ASSOCIATION_NAME & " WHERE " & FIELD_OFFER & " = " & offer.Id)

        '        'Dim fields As New Dictionary(Of String, Object)
        '        'For Each user As Intervenant In offer.Intervenants
        '        '    fields.Clear()
        '        '    fields.Add(FIELD_OFFER, offer.Id)
        '        '    fields.Add(FIELD_USER, user.Id)
        '        '    fields.Add(FIELD_QUALITY, user.Qualite)

        '        '    Dim sql As String = "INSERT INTO " & ASSOCIATION_NAME & "("
        '        '    sql += FormatFieldList(fields.Keys, False)
        '        '    sql += ") VALUES ("

        '        '    Dim first As Boolean = True
        '        '    For Each value As Object In fields.Values
        '        '        If Not first Then sql += "," Else first = False
        '        '        sql += FormatFieldValue(value)
        '        '    Next

        '        '    sql += ");"

        '        '    Database.GetInstance().ExecuteNonQuery(sql)
        '        'Next
        '        End Sub
    End Class

End Namespace